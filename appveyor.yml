image: WMF 5
version: 1.0.0 (Build {build})

init:

clone_script:
  - ps: >-
      if ( -not $env:appveyor_pull_request_number ) {
        git clone -q --branch=$env:appveyor_repo_branch https://github.com/$env:appveyor_repo_name.git $env:appveyor_build_folder
        git checkout -qf $env:appveyor_repo_commit
        git submodule update -q --init --recursive
      } else {
        git clone -q https://github.com/$env:appveyor_repo_name.git $env:appveyor_build_folder
        git fetch -q origin +refs/pull/$env:appveyor_pull_request_number/merge:
        git checkout -qf FETCH_HEAD
        git submodule update -q --init --recursive
      }

install:
  - cmd: GitVersion /output buildserver
  - ps: .\install.ps1 -ErrorAction Stop -InformationAction Continue -Verbose

build_script:
  - cmd: make

test: off

artifacts: 
  - path: fonts\bin
    name: fonts
    type: zip
  - path: fonts\bin\ttf\*.ttf
    name: ttf
  - path: tex\obj\tds\doc\latex\**\*.pdf
    name: tex-docs
  - path: tex\release\ctan\*.zip
    name: ctan
  - path: setup\msm\bin\Release\*.msm
    name: msm
  - path: setup\msi\bin\Release\*.msi
    name: msi

before_deploy:
  - ps: >-
      & GitReleaseNotes . /OutputFile ReleaseNotes.md;
      ${env:release_description} = ( Get-Content -LiteralPath ReleaseNotes.md -Encoding UTF8 ) -join "`n";

deploy:
  - provider: GitHub
    tag: $(appveyor_repo_tag_name)
    release: $(appveyor_repo_tag_name)
    description: $(release_description)
    auth_token:
      secure: HAx57VxF99EnN5lQMiF2vODOgWGsEZvoFlvmhScufiGFS18ZIpgAfAXurdTsHqFP
    artifact: fonts, ttf, tex-docs, ctan, msi
    draft: true
    prerelease: false
    on:
      branch: master
      appveyor_repo_tag: true
